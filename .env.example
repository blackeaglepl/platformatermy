APP_NAME=Laravel
APP_ENV=local

# üîê SECURITY: Generate unique key for each environment!
# Run: php artisan key:generate
# NEVER commit .env file to Git!
# CRITICAL: Without APP_KEY, all encrypted data (sessions, cookies) are insecure!
APP_KEY=

# ‚ö†Ô∏è SECURITY WARNING: MUST be 'false' in production!
# Detailed error messages expose sensitive information (paths, SQL queries, config).
# Set to 'true' ONLY for local development.
APP_DEBUG=true

APP_TIMEZONE=Europe/Warsaw

# Application URL
# Development: http://localhost
# Production: https://panel.termygorce.pl (Laravel admin panel)
# NOTE: Astro website runs on https://termygorce.pl (different domain)
APP_URL=http://localhost

APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

APP_MAINTENANCE_DRIVER=file
# APP_MAINTENANCE_STORE=database

PHP_CLI_SERVER_WORKERS=4

BCRYPT_ROUNDS=12

LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

DB_CONNECTION=sqlite
# DB_HOST=127.0.0.1
# DB_PORT=3306
# DB_DATABASE=laravel
# DB_USERNAME=root
# DB_PASSWORD=

SESSION_DRIVER=database
SESSION_LIFETIME=120
SESSION_ENCRYPT=true
SESSION_PATH=/
SESSION_DOMAIN=null

BROADCAST_CONNECTION=log
FILESYSTEM_DISK=local
QUEUE_CONNECTION=database

# CACHE_STORE auto-detects based on DB_CONNECTION (see config/cache.php):
# - SQLite (development) ‚Üí 'file' cache (avoids database locks)
# - MySQL/PostgreSQL (production) ‚Üí 'database' cache (better performance)
# Uncomment only if you want to override the automatic behavior:
# CACHE_STORE=database
CACHE_PREFIX=

MEMCACHED_HOST=127.0.0.1

REDIS_CLIENT=phpredis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=log
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

VITE_APP_NAME="${APP_NAME}"

# üîê Security - Database Backup Encryption
# CRITICAL: Change this password before deploying to production!
# Requirements:
#   - Minimum 16 characters
#   - Mix of uppercase, lowercase, numbers, and symbols
#   - Store securely in password manager (LastPass, 1Password, Bitwarden)
# Generate strong password: openssl rand -base64 24
# This password is required to restore backups - DO NOT LOSE IT!
BACKUP_PASSWORD=CHANGE_ME_TO_STRONG_PASSWORD
